apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pingdirectory.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pingdirectory.name" . }}
    helm.sh/chart: {{ include "pingdirectory.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ if .Values.service.customName }}{{ .Values.service.customName }}{{- else }}{{ include "pingdirectory.fullname" . }}{{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pingdirectory.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pingdirectory.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 300
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if or (.Values.persistentvolume.enabled) (not .Values.license.useDevOpsKey) }}
        volumeMounts:
        {{- end }}
        {{- if .Values.persistentvolume.enabled }}
        - name: out-dir-{{ .Release.Name }}-{{ .Release.Revision }}
          mountPath: /opt/out
        {{- end }}
        {{- if not .Values.license.useDevOpsKey }}
        - name: license
          mountPath: /opt/in/instance/pingdirectory.lic
          subPath: pingdirectory.lic
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.https.port }}
          name: {{ .Values.service.https.name }}
        - containerPort: {{ .Values.service.ldaps.port }}
          name: {{ .Values.service.ldaps.name }}
        - containerPort: {{ .Values.service.ldap.port }}
          name: {{ .Values.service.ldap.name }}
        envFrom:
        - configMapRef:
            name: {{ include "pingdirectory.fullname" . }}-env-vars
        - secretRef:
            name: {{ include "pingdirectory.fullname" . }}-devops-secret
            optional: true
        - secretRef:
            name: {{ include "pingdirectory.fullname" . }}-git-secret
            optional: true
        readinessProbe:
          exec:
            command: [ {{ .Values.image.readinessCommand }} ]
          initialDelaySeconds: 300
          periodSeconds: 30
        livenessProbe:
          exec:
            command: [ {{ .Values.image.livenessCommand }} ]
          initialDelaySeconds: 300
          periodSeconds: 30
    {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if or (.Values.persistentvolume.enabled) (not .Values.license.useDevOpsKey) }}
      volumes:
      {{- end }}
      {{- if .Values.persistentvolume.enabled }}
      - name: out-dir-{{ .Release.Name }}-{{ .Release.Revision }}
        persistentVolumeClaim:
          claimName: out-dir-{{ .Release.Name }}-{{ .Release.Revision }}
      {{- end }}
      {{- if not .Values.license.useDevOpsKey }}
      - name: license
        secret:
          secretName: {{ .Values.license.licenseSecretName }}
      {{- end }}
  {{- if .Values.persistentvolume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: out-dir-{{ .Release.Name }}-{{ .Release.Revision }}
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.persistentvolume.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.persistentvolume.storage }}
  {{- end }}